{
    "contributions": {
        "settings": [
            {
                "file_patterns": [
                    "/AnyTest.sublime-settings"
                ],
                "schema": {
                    "$id": "sublime://settings/AnyTest",
                    "definitions": {
                        "Runner": {
                            "type": "string",
                            "default": "command",
                            "enum": [
                                "console",
                                "command",
                                "terminus"
                            ],
                            "description": "A runner to run tests with"
                        },
                        "ElixirFrameworks": {
                            "type": "string",
                            "enum": [
                                "espec",
                                "exunit"
                            ]
                        },
                        "GoFrameworks": {
                            "type": "string",
                            "enum": [
                                "delve",
                                "ginkgo",
                                "gotest"
                            ]
                        },
                        "JavascriptFrameworks": {
                            "type": "string",
                            "enum": [
                                "jest",
                                "mocha",
                                "vitest"
                            ]
                        },
                        "PythonFrameworks": {
                            "type": "string",
                            "enum": [
                                "behave",
                                "django",
                                "mamba",
                                "nose",
                                "nose2",
                                "pytest",
                                "pyunit"
                            ]
                        },
                        "RubyFrameworks": {
                            "type": "string",
                            "enum": [
                                "cucumber",
                                "m",
                                "minitest",
                                "rails",
                                "rspec",
                                "test_bench"
                            ]
                        },
                        "RustFrameworks": {
                            "type": "string",
                            "enum": [
                                "cargotest"
                            ]
                        },
                        "SwiftFrameworks": {
                            "type": "string",
                            "enum": [
                                "xctest"
                            ]
                        },
                        "JavaFrameworks": {
                            "type": "string",
                            "enum": [
                                "junit"
                            ]
                        },
                        "PackageConfig": {
                            "properties": {
                                "subprojects": {
                                    "type": "array",
                                    "default": [],
                                    "description": "A list of subprojects",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        ]
                                    }
                                },
                                "test_frameworks": {
                                    "type": "object",
                                    "description": "Test frameworks to choose from",
                                    "properties": {
                                        "elixir": {
                                            "anyOf": [
                                                {
                                                    "$ref": "sublime://settings/AnyTest#/definitions/ElixirFrameworks"
                                                },
                                                {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "sublime://settings/AnyTest#/definitions/ElixirFrameworks"
                                                    }
                                                }
                                            ]
                                        },
                                        "go": {
                                            "anyOf": [
                                                {
                                                    "$ref": "sublime://settings/AnyTest#/definitions/GoFrameworks"
                                                },
                                                {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "sublime://settings/AnyTest#/definitions/GoFrameworks"
                                                    }
                                                }
                                            ]
                                        },
                                        "javascript": {
                                            "anyOf": [
                                                {
                                                    "$ref": "sublime://settings/AnyTest#/definitions/JavascriptFrameworks"
                                                },
                                                {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "sublime://settings/AnyTest#/definitions/JavascriptFrameworks"
                                                    }
                                                }
                                            ]
                                        },
                                        "python": {
                                            "anyOf": [
                                                {
                                                    "$ref": "sublime://settings/AnyTest#/definitions/PythonFrameworks"
                                                },
                                                {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "sublime://settings/AnyTest#/definitions/PythonFrameworks"
                                                    }
                                                }
                                            ]
                                        },
                                        "ruby": {
                                            "anyOf": [
                                                {
                                                    "$ref": "sublime://settings/AnyTest#/definitions/RubyFrameworks"
                                                },
                                                {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "sublime://settings/AnyTest#/definitions/RubyFrameworks"
                                                    }
                                                }
                                            ]
                                        },
                                        "rust": {
                                            "anyOf": [
                                                {
                                                    "$ref": "sublime://settings/AnyTest#/definitions/RustFrameworks"
                                                },
                                                {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "sublime://settings/AnyTest#/definitions/RustFrameworks"
                                                    }
                                                }
                                            ]
                                        },
                                        "swift": {
                                            "anyOf": [
                                                {
                                                    "$ref": "sublime://settings/AnyTest#/definitions/SwiftFrameworks"
                                                },
                                                {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "sublime://settings/AnyTest#/definitions/SwiftFrameworks"
                                                    }
                                                }
                                            ]
                                        },
                                        "java": {
                                            "anyOf": [
                                                {
                                                    "$ref": "sublime://settings/AnyTest#/definitions/JavaFrameworks"
                                                },
                                                {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "sublime://settings/AnyTest#/definitions/JavaFrameworks"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                "log_level": {
                                    "type": "string",
                                    "default": "WARNING",
                                    "enum": [
                                        "DEBUG",
                                        "INFO",
                                        "WARNING",
                                        "ERROR",
                                        "CRITICAL"
                                    ],
                                    "description": "Package log level"
                                },
                                "show_status_messages": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "Show important messages in the sublime status bar"
                                },
                                "save_current_file_on_run": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "Save current file when running tests"
                                },
                                "save_all_files_on_run": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Save all files when running tests"
                                },
                                "scroll_to_view_on_run": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Scroll the view when running tests and the panel is overlaying the cursor"
                                },
                                "select_test_framework_when_not_found": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "When a test framework is not found show a quick panel with all available test frameworks"
                                },
                                "always_show_test_framework_selection": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "show the quick panel even if there is only one test framework available otherwise use the first test framework from the list"
                                },
                                "runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner"
                                },
                                "runner.command.name": {
                                    "type": "string",
                                    "default": "exec",
                                    "description": "Sublime command to run tests with"
                                },
                                "runner.command.panel_name": {
                                    "type": "string",
                                    "default": "output.exec",
                                    "description": "Output panel name"
                                },
                                "runner.terminus.focus_on_run": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Focus on the terminus panel when running tests"
                                },
                                "runner.terminus.run_in_view": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Run tests in a view or in a panel"
                                },
                                "runner.terminus.pre_window_hooks": {
                                    "type": "array",
                                    "default": [],
                                    "description": "A list of window hooks before running tests"
                                },
                                "runner.terminus.post_window_hooks": {
                                    "type": "array",
                                    "default": [],
                                    "description": "A list of window hooks after running tests(e.g. carry_file_to_pane to move the view to a pane)"
                                },
                                "runner.terminus.post_view_hooks": {
                                    "type": "array",
                                    "default": [],
                                    "description": "A list of view hooks before running tests"
                                },
                                "elixir.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run elixir tests with"
                                },
                                "elixir.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Elixir specific ENV variables (will be merged with the ENV variables defined on the test framework level)"
                                },
                                "elixir.espec.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run ESpec tests with"
                                },
                                "elixir.espec.executable": {
                                    "type": "array",
                                    "default": [
                                        "mix",
                                        "espec"
                                    ],
                                    "description": "ESpec test framework executable (e.g. [\"mix\", \"do\", \"smth\"])"
                                },
                                "elixir.espec.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "ESpec cli args (e.g. [\"--do-smth\"])"
                                },
                                "elixir.espec.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "ESpec specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "elixir.exunit.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run ExUnit tests with"
                                },
                                "elixir.exunit.executable": {
                                    "type": "array",
                                    "description": "ExUnit test framework executable (e.g. [\"mix\", \"do\", \"smth\"])"
                                },
                                "elixir.exunit.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "ExUnit cli args (e.g. [\"--do-smth\"])"
                                },
                                "elixir.exunit.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "ExUnit specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "go.test_framework": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/GoFrameworks"
                                },
                                "go.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Go tests with"
                                },
                                "go.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Go specific ENV variables (will be merged with the ENV variables defined on the test framework level)"
                                },
                                "go.delve.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Delve tests with"
                                },
                                "go.delve.executable": {
                                    "type": "array",
                                    "default": [
                                        "dlv",
                                        "test"
                                    ],
                                    "description": "Delve test framework executable (e.g. [\"dlv\", \"my_test\"])"
                                },
                                "go.delve.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "Delve cli args (e.g. [\"--do-smth\"])"
                                },
                                "go.delve.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Delve specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "go.ginko.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Ginkgo tests with"
                                },
                                "go.ginko.executable": {
                                    "type": "array",
                                    "default": [
                                        "ginkgo"
                                    ],
                                    "description": "Ginkgo test framework executable (e.g. [\"my_ginkgo\"])"
                                },
                                "go.ginko.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "Ginkgo cli args (e.g. [\"--do-smth\"])"
                                },
                                "go.ginko.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Ginkgo specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "go.gotest.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Gotest tests with"
                                },
                                "go.gotest.executable": {
                                    "type": "array",
                                    "default": [
                                        "go",
                                        "test"
                                    ],
                                    "description": "Gotest test framework executable (e.g. [\"go\", \"my_test\"])"
                                },
                                "go.gotest.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "Gotest cli args (e.g. [\"--do-smth\"])"
                                },
                                "go.gotest.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Gotest specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "java.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Java specific ENV variables (will be merged with the ENV variables defined on the test framework level)"
                                },
                                "java.junit.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Junit tests with"
                                },
                                "java.junit.executable": {
                                    "type": "array",
                                    "description": "JUnit test framework executable (e.g. [\"bin/my_wrapper\", \"test\"])"
                                },
                                "java.junit.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "JUnit test cli args (e.g. [\"--do-smth\"])"
                                },
                                "java.junit.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "JUnit tests specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "javascript.test_framework": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/JavascriptFrameworks"
                                },
                                "javascript.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run JavaScript tests with"
                                },
                                "javascript.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "JavaScript specific ENV variables (will be merged with the ENV variables defined on the test framework level)"
                                },
                                "javascript.jest.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Jest tests with"
                                },
                                "javascript.jest.executable": {
                                    "type": "array",
                                    "description": "Jest test framework executable (e.g. [\"npm\", \"run\", \"test\"])"
                                },
                                "javascript.jest.args": {
                                    "type": "array",
                                    "default": [
                                        "--no-coverage"
                                    ],
                                    "description": "Jest cli args (e.g. [\"--do-smth\"])"
                                },
                                "javascript.jest.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Jest specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "javascript.mocha.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Mocha tests with"
                                },
                                "javascript.mocha.executable": {
                                    "type": "array",
                                    "description": "Mocha test framework executable (e.g. [\"npm\", \"run\", \"test\"])"
                                },
                                "javascript.mocha.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "Mocha cli args (e.g. [\"--do-smth\"])"
                                },
                                "javascript.mocha.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Mocha specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "javascript.vitest.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Vitest tests with"
                                },
                                "javascript.vitest.executable": {
                                    "type": "array",
                                    "description": "Vitest test framework executable (e.g. [\"npm\", \"run\", \"test\"])"
                                },
                                "javascript.vitest.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "Vitest cli args (e.g. [\"--do-smth\"])"
                                },
                                "javascript.vitest.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Vitest specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "python.test_framework": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/PythonFrameworks"
                                },
                                "python.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Python tests with"
                                },
                                "python.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Python specific ENV variables (will be merged with the ENV variables defined on the test framework level)"
                                },
                                "python.behave.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Behave tests with"
                                },
                                "python.behave.executable": {
                                    "type": "array",
                                    "default": [
                                        "behave"
                                    ],
                                    "description": "Behave test framework executable (e.g. [\"my_behave\"])"
                                },
                                "python.behave.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "Behave cli args (e.g. [\"--do-smth\"])"
                                },
                                "python.behave.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Behave specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "python.django.use_nose": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Use the Nose test framework for Django"
                                },
                                "python.django.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Django tests with"
                                },
                                "python.django.executable": {
                                    "type": "array",
                                    "description": "Django test framework executable (e.g. [\"my_djangotest\"])"
                                },
                                "python.django.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "Django cli args (e.g. [\"--do-smth\"])"
                                },
                                "python.django.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Django specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "python.mamba.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Mamba tests with"
                                },
                                "python.mamba.executable": {
                                    "type": "array",
                                    "description": "Mamba test framework executable (e.g. [\"my_mamba\"])"
                                },
                                "python.mamba.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "Mamba cli args (e.g. [\"--do-smth\"])"
                                },
                                "python.mamba.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Mamba specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "python.nose.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Nose tests with"
                                },
                                "python.nose.executable": {
                                    "type": "array",
                                    "description": "Nose test framework executable (e.g. [\"my_nosetests\"])"
                                },
                                "python.nose.args": {
                                    "type": "array",
                                    "default": [
                                        "--doctest-tests"
                                    ],
                                    "description": "Nose cli args (e.g. [\"--do-smth\"])"
                                },
                                "python.nose.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Nose specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "python.nose2.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Nose2 tests with"
                                },
                                "python.nose2.executable": {
                                    "type": "array",
                                    "default": [
                                        "nose2"
                                    ],
                                    "description": "Nose2 test framework executable (e.g. [\"my_nose2\"])"
                                },
                                "python.nose2.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "Nose2 cli args (e.g. [\"--do-smth\"])"
                                },
                                "python.nose2.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Nose2 specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "python.pytest.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run PyTest tests with"
                                },
                                "python.pytest.executable": {
                                    "type": "array",
                                    "description": "PyTest test framework executable (e.g. [\"my_pytest\"])"
                                },
                                "python.pytest.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "PyTest cli args (e.g. [\"--do-smth\"])"
                                },
                                "python.pytest.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "PyTest specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "python.pyunit.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "enum": [
                                        "console",
                                        "command",
                                        "terminus",
                                        "unittesting"
                                    ],
                                    "description": "A runner to run PyUnit tests with"
                                },
                                "python.pyunit.executable": {
                                    "type": "array",
                                    "description": "PyUnit test framework executable (e.g. [\"my_pyunit\"])"
                                },
                                "python.pyunit.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "PyUnit cli args (e.g. [\"--do-smth\"])"
                                },
                                "python.pyunit.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "PyUnit specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "ruby.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Python tests with"
                                },
                                "ruby.use_bundle": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "If the Gemfile exists prefix the executable with bundle exec"
                                },
                                "ruby.use_binstubs": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "If the binstub exists use it as an executable"
                                },
                                "ruby.use_spring_binstub": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "If the Spring binstub exists prefix the executable with it"
                                },
                                "ruby.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Ruby specific ENV variables (will be merged with the ENV variables defined on the test framework level)"
                                },
                                "ruby.cucumber.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Cucumber tests with"
                                },
                                "ruby.cucumber.executable": {
                                    "type": "array",
                                    "description": "Cucumber test framework executable (e.g. [\"bin/my_cucumber\"])"
                                },
                                "ruby.cucumber.use_bundle": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "If the Gemfile exists prefix the Cucumber executable with bundle exec"
                                },
                                "ruby.cucumber.use_binstubs": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "If the Cucumber binstub exists use it as an executable"
                                },
                                "ruby.cucumber.use_spring_binstub": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "If the Spring binstub exists prefix the Cucumber executable with it"
                                },
                                "ruby.cucumber.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "Cucumber cli args (e.g. [\"--do-smth\"])"
                                },
                                "ruby.cucumber.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Cucumber specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "ruby.m.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Cucumber tests with"
                                },
                                "ruby.m.executable": {
                                    "type": "array",
                                    "description": "M test framework executable (e.g. [\"bin/my_m\"])"
                                },
                                "ruby.m.use_bundle": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "If the Gemfile exists prefix the M executable with bundle exec"
                                },
                                "ruby.m.use_binstubs": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "If the M binstub exists use it as an executable"
                                },
                                "ruby.m.use_spring_binstub": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "If the Spring binstub exists prefix the M executable with it"
                                },
                                "ruby.m.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "M cli args (e.g. [\"--do-smth\"])"
                                },
                                "ruby.m.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "M specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "ruby.minitest.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run minitest tests with"
                                },
                                "ruby.minitest.executable": {
                                    "type": "array",
                                    "description": "minitest test framework executable (e.g. [\"bin/tests\"])"
                                },
                                "ruby.minitest.use_bundle": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "If the Gemfile exists prefix the minitest executable with bundle exec"
                                },
                                "ruby.minitest.use_binstubs": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "If the minitest binstub exists use it as an executable"
                                },
                                "ruby.minitest.use_spring_binstub": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "If the Spring binstub exists prefix the minitest executable with it"
                                },
                                "ruby.minitest.use_m": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "If the file pattern matches use the M test framework"
                                },
                                "ruby.minitest.test_folder": {
                                    "type": "string",
                                    "default": "test",
                                    "description": "The folder when the tests are located"
                                },
                                "ruby.minitest.file_pattern": {
                                    "type": "string",
                                    "default": "*_test.rb",
                                    "description": "The test files pattern"
                                },
                                "ruby.minitest.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "minitest cli args (e.g. [\"--do-smth\"])"
                                },
                                "ruby.minitest.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "minitest specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "ruby.rails.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Rails tests with"
                                },
                                "ruby.rails.executable": {
                                    "type": "array",
                                    "description": "Rails test framework executable (e.g. [\"bin/my_rails_test\"])"
                                },
                                "ruby.rails.use_bundle": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "If the Gemfile exists prefix the Rails executable with bundle exec"
                                },
                                "ruby.rails.use_binstubs": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "If the Rails binstub exists use it as an executable"
                                },
                                "ruby.rails.use_spring_binstub": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "If the Spring binstub exists prefix the Rails test framework executable with it"
                                },
                                "ruby.rails.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "Rails test framework cli args (e.g. [\"--do-smth\"])"
                                },
                                "ruby.rails.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Rails test framework specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "ruby.rspec.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run RSpec tests with"
                                },
                                "ruby.rspec.executable": {
                                    "type": "array",
                                    "description": "RSpec test framework executable (e.g. [\"bin/my_rspec\"])"
                                },
                                "ruby.rspec.use_bundle": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "If the Gemfile exists prefix the RSpec executable with bundle exec"
                                },
                                "ruby.rspec.use_binstubs": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "If the RSpec binstub exists use it as an executable"
                                },
                                "ruby.rspec.use_spring_binstub": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "If the Spring binstub exists prefix the RSpec executable with it"
                                },
                                "ruby.rspec.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "RSpec cli args (e.g. [\"--do-smth\"])"
                                },
                                "ruby.rspec.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "RSpec specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "ruby.test_bench.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Cucumber tests with"
                                },
                                "ruby.test_bench.executable": {
                                    "type": "array",
                                    "description": "M test framework executable (e.g. [\"bin/my_m\"])"
                                },
                                "ruby.test_bench.use_bundle": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "If the Gemfile exists prefix the M executable with bundle exec"
                                },
                                "ruby.test_bench.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "M cli args (e.g. [\"--do-smth\"])"
                                },
                                "ruby.test_bench.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "M specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "rust.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run Rust tests with"
                                },
                                "rust.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Rust specific ENV variables (will be merged with the ENV variables defined on the test framework level)"
                                },
                                "rust.cargotest.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run cargo tests with"
                                },
                                "rust.cargotest.executable": {
                                    "type": "array",
                                    "default": [
                                        "cargo",
                                        "test"
                                    ],
                                    "description": "Cargo test framework executable (e.g. [\"bin/tests\"])"
                                },
                                "rust.cargotest.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "Cargo test cli args (e.g. [\"--do-smth\"])"
                                },
                                "rust.cargotest.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Cargo tests specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                },
                                "swift.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "Swift specific ENV variables (will be merged with the ENV variables defined on the test framework level)"
                                },
                                "swift.xctest.runner": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/Runner",
                                    "description": "A runner to run XCTest tests with"
                                },
                                "swift.xctest.executable": {
                                    "type": "array",
                                    "default": [
                                        "swift",
                                        "test"
                                    ],
                                    "description": "XCTest test framework executable (e.g. [\"bin/tests\"])"
                                },
                                "swift.xctest.args": {
                                    "type": "array",
                                    "default": [],
                                    "description": "XCTest test cli args (e.g. [\"--do-smth\"])"
                                },
                                "swift.xctest.env": {
                                    "type": "object",
                                    "default": {},
                                    "description": "XCTest tests specific ENV variables (will be merged with the ENV variables defined on the language level)"
                                }
                            }
                        }
                    },
                    "$ref": "sublime://settings/AnyTest#/definitions/PackageConfig"
                }
            },
            {
                "file_patterns": [
                    "/*.sublime-project"
                ],
                "schema": {
                    "properties": {
                        "settings": {
                            "properties": {
                                "AnyTest": {
                                    "$ref": "sublime://settings/AnyTest#/definitions/PackageConfig"
                                }
                            }
                        }
                    }
                }
            }
        ]
    }
}
